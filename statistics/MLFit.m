% MLFIT -- Maximum Likelihood Fitting procedure%    MLFIT attempts to find the best fit of a function through a set%    of points by minimizing chi-square.%% Usage:%    [paramBest, mse] = mlfit('fn', params0, xvals, yvals, stdev);%%    where 'fn' is a function defined in an M-file as 'y=fn(x, p)'.%% Alternative usages:%    [paramBest, mse] = mlfit('fn', params0, xvals, yvals); % no stdev%    paramBest = mlfit('fn', params0, xvals, yvals, stdev); % no mse%%% 27-JUL-2004: Pascal Mamassian% 17-AUG-2004: changed 'fmins' into 'fminsearch' and use a nested function% 22-AUG-2008: fixed to work with 2D matrices of data% 08-JUL-2009: fixed to work with n-D matrices of datafunction [p1, mse] = MLFit(fn, p0, xx, yy, sd, intMaxEvals)		if nargin < 5 || isempty(sd)		sd = ones(size(xx));	end	if nargin < 6		intMaxEvals = 10000;	end		yy1 = reshape(yy, 1, []);	sd1 = reshape(sd, 1, []);		options = optimset('Display','off','MaxFunEvals',intMaxEvals,'MaxIter',intMaxEvals);	[p1, ee] = fminsearch(@errfcn, p0,options);	mse = ee / numel(xx);      % mean square error		%% define a nested function	function err = errfcn(pp)		ypred = feval(fn, xx, pp);		ypred1 = reshape(ypred, 1, []);		err = sum(((yy1 - ypred1) ./ sd1) .^2);	end	end